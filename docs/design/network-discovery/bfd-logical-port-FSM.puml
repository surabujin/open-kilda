Internal data:
* session data

Input signals
* port-add
* port-del
* enable_update (ISL-FSM)
* disable (ISL-FSM)
* session-del
* online
* offline
* worker-success
* worker-error
* requests-query-empty (injected by processWorker* methods)

@startuml
title BFD logical port FSM

[*] --> ENTER
note right of ENTER
    The system must receive one of the events
    that lead out of this state right after FSM was
    created. i.e. FSM must not stay in this state.
end note

ENTER --> PREPARE : enable_update
ENTER --> READY : port-add

PREPARE --> CREATING : next
PREPARE: enter / clean active requests
PREPARE: enter / save session data

READY -> OPERATIONAL : enable_update / save session data
READY --> REMOVING : disable
READY --> [*] : port-del
READY : enter / clear session data

CREATING -> OPERATIONAL : port-add
CREATING --> REMOVING : disable
CREATING: enter / [isOnline] send port create request
CREATING: online / send port create request
CREATING: port-del / send port create request
CREATING: enable_update / save session data
CREATING: enable_update / [isOnline] send port create request
CREATING: worker-success / report success
CREATING: worker-error / report error
CREATING: worker-error / send bfd-kill
CREATING: exit / clean active requests

OPERATIONAL --> REMOVING : session-del
OPERATIONAL --> HOUSEKEEPING : port-del
OPERATIONAL: enter [have session data] / send session enable_update
OPERATIONAL: enable_update / send session enable_update
OPERATIONAL: disable / send session disable

REMOVING: enter / [isOnline] send port delete request
REMOVING --> WAIT_ONGOING_REQUESTS : enable_update
REMOVING --> [*] : port-del
REMOVING: online / send port delete request
REMOVING: port-add / send port delete request
REMOVING: worker-success / report success
REMOVING: worker-error / report error

HOUSEKEEPING --> OPERATIONAL : port-add
HOUSEKEEPING --> [*] : session-del
HOUSEKEEPING --> PREPARE : enable_update
HOUSEKEEPING --> DEBRIS : disable
HOUSEKEEPING : enter / send session disable

DEBRIS --> [*] : session-del
DEBRIS --> REMOVING : port-add
DEBRIS --> PREPARE : enable_update

WAIT_ONGOING_REQUESTS : enter / save session data
WAIT_ONGOING_REQUESTS : enter / [requests query is empty] fire requests-query-empty
WAIT_ONGOING_REQUESTS -u-> RECOVERY : requests-query-empty
WAIT_ONGOING_REQUESTS --> CREATING : port-del / clean active requests
WAIT_ONGOING_REQUESTS --> REMOVING : disable
WAIT_ONGOING_REQUESTS : enable_update / save session data
WAIT_ONGOING_REQUESTS : worker-success / report success
WAIT_ONGOING_REQUESTS : worker-error / report error

RECOVERY : enter / [isOnline] send port create request
RECOVERY --> OPERATIONAL : worker-success / report success
RECOVERY --> REMOVING : disable
RECOVERY --> CREATING : port-del
RECOVERY : online / send port create request
RECOVERY : enable_update / save session data
RECOVERY : enable_update / [isOnline] send port create request
RECOVERY : worker-error / report error
RECOVERY: exit / clean active requests

@enduml
