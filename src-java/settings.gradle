rootProject.name = 'kilda-parent'

includeBuild('projectfloodlight/floodlight')
includeBuild('projectfloodlight/openflowj')

include 'base-messaging'
include 'base-storm-topology'
include 'connecteddevices-storm-topology'
include 'floodlightrouter-storm-topology'
include 'floodlight-api'
include 'floodlight-modules'
include 'flowhs-storm-topology'
include 'flowhs-messaging'
include 'flowmonitoring-storm-topology'
include 'flowmonitoring-messaging'
include 'grpc-api'
include 'grpc-service'
include 'isllatency-storm-topology'
include 'kilda-configuration'
include 'kilda-model'
include 'kilda-pce'
include 'kilda-persistence-api'
include 'kilda-persistence-orientdb'
include 'kilda-persistence-tinkerpop'
include 'kilda-persistence-hibernate'
include 'kilda-persistence-mixture'
include 'kilda-reporting'
include 'kilda-utils:stubs'
include 'nbworker-messaging'
include 'nbworker-storm-topology'
include 'network-messaging'
include 'network-storm-topology'
include 'northbound-api'
include 'northbound'
include 'opentsdb-storm-topology'
include 'ping-messaging'
include 'ping-storm-topology'
include 'portstate-storm-topology'
include 'reroute-messaging'
include 'reroute-storm-topology'
include 'server42-control'
include 'server42-control-messaging'
include 'server42-control-server-stub'
include 'server42-control-storm-stub'
include 'server42-stats'
include 'server42-stats-messaging'
include 'server42-messaging'
include 'server42-control-storm-topology'
include 'stats-storm-topology'
include 'swmanager-storm-topology'
include 'atdd-staging'
include 'functional-tests'
include 'performance-tests'
include 'test-library'
include 'blue-green'

project(':base-messaging').projectDir = "$rootDir/base-topology/base-messaging" as File
project(':base-storm-topology').projectDir = "$rootDir/base-topology/base-storm-topology" as File
project(':connecteddevices-storm-topology').projectDir = "$rootDir/connecteddevices-topology/connecteddevices-storm-topology" as File
project(':floodlightrouter-storm-topology').projectDir = "$rootDir/floodlightrouter-topology/floodlightrouter-storm-topology" as File
project(':floodlight-api').projectDir = "$rootDir/floodlight-service/floodlight-api" as File
project(':floodlight-modules').projectDir = "$rootDir/floodlight-service/floodlight-modules" as File
project(':flowhs-storm-topology').projectDir = "$rootDir/flowhs-topology/flowhs-storm-topology" as File
project(':flowhs-messaging').projectDir = "$rootDir/flowhs-topology/flowhs-messaging" as File
project(':flowmonitoring-storm-topology').projectDir = "$rootDir/flowmonitoring-topology/flowmonitoring-storm-topology" as File
project(':flowmonitoring-messaging').projectDir = "$rootDir/flowmonitoring-topology/flowmonitoring-messaging" as File
project(':grpc-api').projectDir = "$rootDir/grpc-speaker/grpc-api" as File
project(':grpc-service').projectDir = "$rootDir/grpc-speaker/grpc-service" as File
project(':isllatency-storm-topology').projectDir = "$rootDir/isllatency-topology/isllatency-storm-topology" as File
project(':nbworker-messaging').projectDir = "$rootDir/nbworker-topology/nbworker-messaging" as File
project(':nbworker-storm-topology').projectDir = "$rootDir/nbworker-topology/nbworker-storm-topology" as File
project(':network-messaging').projectDir = "$rootDir/network-topology/network-messaging" as File
project(':network-storm-topology').projectDir = "$rootDir/network-topology/network-storm-topology" as File
project(':northbound-api').projectDir = "$rootDir/northbound-service/northbound-api" as File
project(':northbound').projectDir = "$rootDir/northbound-service/northbound" as File
project(':opentsdb-storm-topology').projectDir = "$rootDir/opentsdb-topology/opentsdb-storm-topology" as File
project(':ping-messaging').projectDir = "$rootDir/ping-topology/ping-messaging" as File
project(':ping-storm-topology').projectDir = "$rootDir/ping-topology/ping-storm-topology" as File
project(':portstate-storm-topology').projectDir = "$rootDir/portstate-topology/portstate-storm-topology" as File
project(':reroute-messaging').projectDir = "$rootDir/reroute-topology/reroute-messaging" as File
project(':reroute-storm-topology').projectDir = "$rootDir/reroute-topology/reroute-storm-topology" as File
project(':server42-control').projectDir = "$rootDir/server42/server42-control" as File
project(':server42-control-messaging').projectDir = "$rootDir/server42/server42-control-messaging" as File
project(':server42-control-server-stub').projectDir = "$rootDir/server42/server42-control-server-stub" as File
project(':server42-control-storm-stub').projectDir = "$rootDir/server42/server42-control-storm-stub" as File
project(':server42-stats').projectDir = "$rootDir/server42/server42-stats" as File
project(':server42-stats-messaging').projectDir = "$rootDir/server42/server42-stats-messaging" as File
project(':server42-messaging').projectDir = "$rootDir/server42/server42-messaging" as File
project(':server42-control-storm-topology').projectDir = "$rootDir/server42/server42-control-storm-topology" as File
project(':stats-storm-topology').projectDir = "$rootDir/stats-topology/stats-storm-topology" as File
project(':swmanager-storm-topology').projectDir = "$rootDir/swmanager-topology/swmanager-storm-topology" as File

project(':atdd-staging').projectDir = "$rootDir/testing/atdd-staging" as File
project(':functional-tests').projectDir = "$rootDir/testing/functional-tests" as File
project(':performance-tests').projectDir = "$rootDir/testing/performance-tests" as File
project(':test-library').projectDir = "$rootDir/testing/test-library" as File
